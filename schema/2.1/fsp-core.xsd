<xs:schema xmlns:fsp="http://www.fujion.org/schema/fsp" elementFormDefault="qualified" targetNamespace="http://www.fujion.org/schema/fsp" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
        <xs:documentation>Fujion Server Page, Core Schema, version 2.1</xs:documentation>
    </xs:annotation>
    <xs:include schemaLocation="./fsp-root.xsd"/>
    <xs:element name="button" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A simple button component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="left" name="position" type="fsp:button_position">
                <xs:annotation>
                    <xs:documentation>The position of the label relative to the image.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="caption" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>Associates a label with another component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute default="start" name="alignment" type="fsp:caption_alignment">
                <xs:annotation>
                    <xs:documentation>The alignment of the label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="label-default" name="labelClass" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS class(es) associated with the label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="labelStyle" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS style(s) associated with the label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="left" name="position" type="fsp:caption_position">
                <xs:annotation>
                    <xs:documentation>The position of the label relative to its associated component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="cell" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A simple cell component with an optional label.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="checkbox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A simple check box with an associated label.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="checked" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The checked state of the check box.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="right" name="position" type="fsp:checkbox_position">
                <xs:annotation>
                    <xs:documentation>The position of the label relative to the contained elements.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="colorpicker" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component for selecting a color from a palette of colors.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:colorpickeritem"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="showHints" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the text representation of pick list items is displayed when hovering over them.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="showText" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the text representation of the selection is displayed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="colorpickeritem">
        <xs:annotation>
            <xs:documentation>A color choice.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Text representation of the item value.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="column">
        <xs:annotation>
            <xs:documentation>A single column within a grid.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="sizable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the column may be resized.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="sortBy" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name of the model property to be used for sorting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="sortColumn" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if this is the currently sorted column.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="unsorted" name="sortOrder" type="fsp:column_sortOrder">
                <xs:annotation>
                    <xs:documentation>The ordering to be used when the sort method is invoked.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="sortToggle" type="fsp:column_sortToggle">
                <xs:annotation>
                    <xs:documentation>The type of sort toggle.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="columns">
        <xs:annotation>
            <xs:documentation>A container for a grid's columns.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:column"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="combobox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A combo box control.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:comboitem"/>
            </xs:all>
            <xs:attribute default="false" name="autoFilter" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if any choices not matching the current input should be hidden.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="comboitem">
        <xs:annotation>
            <xs:documentation>A single item within a combo box.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="selected" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The selection state.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The value associated with the combo item.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="cscript" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>JavaScript source code for client-side invocation.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="case" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="content" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The text content associated with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="controller" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Controller to be wired to this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="data" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Data object to associate with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="foreach" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="each" name="forvar" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="forward" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="if" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If false, prevent component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="impl" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Component implementation class to substitute.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="true" name="includeNamedComponents" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If true, any named components within the namespace occupied by "self" will be passed as arguments to the script.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="mode" type="fsp:cscript_mode">
                        <xs:annotation>
                            <xs:documentation>The script's execution mode.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="namespace" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="self" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The component to be referenced by the script language's "self" variable.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="src" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The URL of the external content source.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="switch" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="unless" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If true, prevent component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="datebox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An input box for entering dates.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="yyyy-MM-dd" name="format" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The format for displaying the date.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="decimalbox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An input box for entering big decimal values.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="step" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The increment or decrement when the spinner element is clicked.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="synchronized" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>A true value means that the client will notify the server as the value of the input box changes. A false value means that the client will notify server of the new value only when the input element loses focus.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="detail" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A collapsible detail component.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="open" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the detail view is open.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="div" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A simple div component.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="doublebox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An input box for entering floating point values.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="step" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The increment or decrement when the spinner element is clicked.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="synchronized" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>A true value means that the client will notify the server as the value of the input box changes. A false value means that the client will notify server of the new value only when the input element loses focus.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="grid" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A grid component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="1" minOccurs="0" ref="fsp:columns"/>
                <xs:element maxOccurs="1" minOccurs="0" ref="fsp:rows"/>
            </xs:all>
            <xs:attribute name="autoSize" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, columns automatically resize based on their content.  Default is true.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="title" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The title text.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="groupbox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A container component with a frame and title for visual grouping of related elements.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="title" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The title text.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="html" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component that allows embedding native HTML within a page.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="balloon" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="case" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="class" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="content" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The text content associated with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="context" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="controller" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Controller to be wired to this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="css" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The CSS specifier for this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="data" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Data object to associate with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="false" name="disabled" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>True if the component is disabled.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="dragid" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="dropid" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="flex" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The component's flex style setting.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="false" name="focus" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="foreach" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="each" name="forvar" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="forward" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="height" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The component's height.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="hint" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="if" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If false, prevent component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="impl" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Component implementation class to substitute.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="keycapture" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The list of key codes to be captured.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="namespace" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="popup" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="src" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The URL of external HTML content.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="style" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The active CSS styles for this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="switch" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="0" name="tabindex" type="fsp:integer">
                        <xs:annotation>
                            <xs:documentation>The tab index for the component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="unless" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If true, prevent component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="true" name="visible" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>The visibility state of the component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="width" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The component's width.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="iframe" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An iframe component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="sandbox" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The sandbox setting for the iframe.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="src" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the loaded document.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="image" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component representing an embedded image.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="alt" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The alternate text for the image.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="src" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image resource.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="imagepicker" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component for selecting an image from a collection of images.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:imagepickeritem"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="showHints" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the text representation of pick list items is displayed when hovering over them.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="showText" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the text representation of the selection is displayed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="imagepickeritem">
        <xs:annotation>
            <xs:documentation>An image selection for image picker.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Text representation of the item value.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="import" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component that permits importing another page into the referencing page.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="src" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the imported FSP.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="integerbox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An input box for entering integers.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="step" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The increment or decrement when the spinner element is clicked.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="synchronized" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>A true value means that the client will notify the server as the value of the input box changes. A false value means that the client will notify server of the new value only when the input element loses focus.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="label" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A simple label component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="link" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A simple hyperlink (anchor) component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="href" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the link destination.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="left" name="position" type="fsp:link_position">
                <xs:annotation>
                    <xs:documentation>The position of the label relative to the contained elements.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="target" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The target where the linked document will be opened.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="listbox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A simple list box control.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:listitem"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="multiple" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, multiple list items may be selected at once.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="size" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The number of visible list items.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="listitem">
        <xs:annotation>
            <xs:documentation>A single item within a list box.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="selected" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The selection state.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The value associated with the list item.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="longbox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An input box for entering long integers.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="step" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The increment or decrement when the spinner element is clicked.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="synchronized" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>A true value means that the client will notify the server as the value of the input box changes. A false value means that the client will notify server of the new value only when the input element loses focus.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="memobox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>Component for entering multiple lines of text.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute default="false" name="autoScroll" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the control will ensure that the last line of input is always visible, scrolling if necessary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="20" name="cols" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The visible width of the input area in characters.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="2" name="rows" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The visible number of rows in the input area.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="synchronized" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>A true value means that the client will notify the server as the value of the input box changes. A false value means that the client will notify server of the new value only when the input element loses focus.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="soft" name="wrap" type="fsp:memobox_wrap">
                <xs:annotation>
                    <xs:documentation>Text wrapping behavior when submitting a form.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="menu" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A drop down menu.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuheader"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuitem"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuseparator"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="open" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The open state.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="menuheader">
        <xs:annotation>
            <xs:documentation>A visual header within a menu.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="menuitem">
        <xs:annotation>
            <xs:documentation>A single menu item.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuheader"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuitem"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuseparator"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="checkable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the menu item has an associated check box.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="checked" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The checked state of the menu item.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="menupopup" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An extension of the Popup component designed for use with popup context menus.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuheader"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuitem"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:menuseparator"/>
            </xs:all>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="menuseparator">
        <xs:annotation>
            <xs:documentation>Visually separates items within a menu.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="messagepane">
        <xs:annotation>
            <xs:documentation>A pane holding a single message in a message window.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute default="false" name="actionable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the message is actionable.  An actionable message has an action icon that, when clicked, triggers an action event.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="category" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The category of the message.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="8000" name="duration" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The duration, in milliseconds, that the message will be displayed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="title" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The title bar text.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="messagewindow">
        <xs:annotation>
            <xs:documentation>A window that slides down from the top center of the viewport</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:messagepane"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="module" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component for loading a module via the SystemJS module loader.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="src" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The path of the module to load.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="namespace" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An extension of a Span component that implements its own namespace.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="page">
        <xs:annotation>
            <xs:documentation>The root component of a Fujion Server Page.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="closable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the browser window may be closed without challenge.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image used for the page icon.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="title" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The page title.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="paging" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A page navigation component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="currentPage" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The number of the currently selected page.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pageSize" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum number of items on a single page.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="target" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component whose associated model will be manipulated by paging operations.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="pane">
        <xs:annotation>
            <xs:documentation>A single pane within a pane view.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="splittable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the pane has an associated splitter and can be manually resized.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="title" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The title text.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="paneview" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A container that visually separate panes with optional splitter controls.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:pane"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="horizontal" name="orientation" type="fsp:paneview_orientation">
                <xs:annotation>
                    <xs:documentation>The orientation of child panes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="popup" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A container component that be displayed at a selected location.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="popupbox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A text box with a drop down button that triggers the appearance of a popup component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="1" minOccurs="0" ref="fsp:popup"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="masked" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is to be obscured by a mask.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="open" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the popup box is open.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="synchronized" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>A true value means that the client will notify the server as the value of the input box changes. A false value means that the client will notify server of the new value only when the input element loses focus.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="progressbar" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A progress bar.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="100" name="maxvalue" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum value for the slider.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="value" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The current value of the slider.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="radiobutton" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A single radio button.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="checked" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The checked state of the check box.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="right" name="position" type="fsp:radiobutton_position">
                <xs:annotation>
                    <xs:documentation>The position of the label relative to the contained elements.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="radiogroup" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>Logically groups together multiple radio buttons.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="horizontal" name="orientation" type="fsp:radiogroup_orientation">
                <xs:annotation>
                    <xs:documentation>The orientation of radio buttons belonging to this group.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="row">
        <xs:annotation>
            <xs:documentation>A single row within a grid.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="selected" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The selected state of this row.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="rowcell">
        <xs:annotation>
            <xs:documentation>A single cell within a grid row.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="1" name="colspan" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>How many columns this cell will span.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="1" name="rowspan" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>How many rows this cell will span.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="rows">
        <xs:annotation>
            <xs:documentation>A container for a grid's rows.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:row"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="no" name="selectable" type="fsp:rows_selectable">
                <xs:annotation>
                    <xs:documentation>The selectability setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="slider" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A slider component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="100" name="maxvalue" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="minvalue" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="horizontal" name="orientation" type="fsp:slider_orientation">
                <xs:annotation>
                    <xs:documentation>The orientation of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="1" name="step" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The amount of change in the current value when an arrow button is clicked.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="synchronized" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If set to true, every change to the slider's value will be sent to the server. If false, only the final value will be sent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="value" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The current value of the slider.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="snippet">
        <xs:annotation>
            <xs:documentation>A Fujion resource that can be inserted into a template.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:snippet"/>
            </xs:all>
            <xs:attribute name="anchor" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name of the anchor component within the template.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="last" name="position" type="fsp:snippet_position">
                <xs:annotation>
                    <xs:documentation>The insertion point of the snippet relative to its anchor.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="src" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the source FSP for this snippet.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="span" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A simple span component.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="sscript" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>Script source code for server-side invocation.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="case" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="content" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The text content associated with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="controller" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Controller to be wired to this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="data" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Data object to associate with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="foreach" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="each" name="forvar" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="forward" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="if" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If false, prevent component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="impl" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Component implementation class to substitute.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="true" name="includeNamedComponents" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If true, any named components within the namespace occupied by "self" will be passed as arguments to the script.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="mode" type="fsp:sscript_mode">
                        <xs:annotation>
                            <xs:documentation>The script's execution mode.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="namespace" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="self" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The component to be referenced by the script language's "self" variable.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="src" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The URL of the external content source.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="switch" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="type" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The script type.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="unless" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If true, prevent component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="style" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component for inserting an embedded style sheet or linking to an external style sheet.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="case" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="content" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The text content associated with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="controller" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Controller to be wired to this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="data" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Data object to associate with this component.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="foreach" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="each" name="forvar" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="forward" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="if" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If false, prevent component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="impl" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Component implementation class to substitute.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="namespace" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="src" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The URL of the external content source.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="switch" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="unless" type="fsp:boolean">
                        <xs:annotation>
                            <xs:documentation>If true, prevent component creation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="tab">
        <xs:annotation>
            <xs:documentation>A single tab in a tab view.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="closable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the tab is closable. A closable tab has an icon that, when clicked, removes and destroys the tab.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="selected" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The selection state of the tab.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="tabview" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component supporting a tab-based view.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:tab"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="top" name="tabPosition" type="fsp:tabview_tabPosition">
                <xs:annotation>
                    <xs:documentation>The position of the tabs.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="template" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component that merges a source page with zero or more snippets.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:snippet"/>
            </xs:all>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="src" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the FSP for this template.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="textbox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component for entering a single line of text.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="masked" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is to be obscured by a mask.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="synchronized" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>A true value means that the client will notify the server as the value of the input box changes. A false value means that the client will notify server of the new value only when the input element loses focus.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="timebox" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>An input box for entering a time value.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="HH:mm:ss" name="format" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Format for displaying the time.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxlength" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum character length of input.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="maxvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The maximum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="minvalue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The minimum allowable value, if any.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Regular expression that constrains the input format.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="placeholder" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The placeholder message that is displayed when the input box is empty.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="readonly" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the input box is read-only.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="required" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if input is required for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The input value as a string.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="timer" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A timer component.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="interval" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The timer interval in milliseconds.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="-1" name="repeat" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The number of times the timer will fire additional events after the initial event.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="running" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the timer is running.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="toolbar" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A toolbar component.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute default="start" name="alignment" type="fsp:toolbar_alignment">
                <xs:annotation>
                    <xs:documentation>The alignment of children within the tool bar.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="horizontal" name="orientation" type="fsp:toolbar_orientation">
                <xs:annotation>
                    <xs:documentation>The orientation of the tool bar.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="treenode">
        <xs:annotation>
            <xs:documentation>A single node in a tree view.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:treenode"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="collapsed" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the node is collapsed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="label" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The text label.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="selected" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The selected state.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="treeview" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component acting as a root for a hierarchical collection of nodes.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:treenode"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="model" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The model to be associated with the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="renderer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The renderer to be associated with the model.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="showLines" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if lines connecting parent nodes to their children should be displayed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="showRoot" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the tree root should be visible.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="showToggles" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if expander icons should be displayed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="upload" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A component for uploading files to the server.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="accept" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifier for acceptable file types.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="104857600" name="maxsize" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The maximum allowable file size, in bytes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="multiple" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if multiple file uploads are allowed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="progress" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the uploader will fire UploadEvent events to report progress.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="window" substitutionGroup="fsp:anyParent">
        <xs:annotation>
            <xs:documentation>A window component with a title bar and maximize/minimize/close buttons.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:all>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="fsp:anyParent"/>
            </xs:all>
            <xs:attribute name="balloon" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The balloon text to be displayed adjacent to the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="case" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for matching a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="class" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Space-delimited list of CSS classes.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="closable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the window is closable. A window that is closable has an icon that, when clicked, triggers a close event.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="destroy" name="closeAction" type="fsp:window_closeAction">
                <xs:annotation>
                    <xs:documentation>The action to be taken when the window is closed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="context" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when right-clicking on this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="controller" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Controller to be wired to this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="css" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The CSS specifier for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="data" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Data object to associate with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="disabled" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the component is disabled.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dragid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drag id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="dropid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A space-delimited list of drop id's associated with this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="flex" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's flex style setting.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="focus" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>Sets or removes focus for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="foreach" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies a collection for iterative component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="each" name="forvar" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the attribute name used in foreach.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="forward" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Sets one or more event forwarding directives.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's height.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="hint" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup text to be displayed when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="if" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If false, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="image" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The URL of the image to be displayed on the left side of the title bar.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="impl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Component implementation class to substitute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keycapture" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The list of key codes to be captured.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="maximizable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the window may be maximized.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="minimizable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>True if the window may be minimized.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="inline" name="mode" type="fsp:window_mode">
                <xs:annotation>
                    <xs:documentation>The display mode of the window.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="movable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, the window may be moved to a new position by dragging its title bar.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name associated with this component instance (must be unique within the enclosing namespace).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="namespace" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>When true, this component acts as a namespace boundary.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="popup" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The popup component that will appear when hovering over this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="center" name="position" type="fsp:window_position">
                <xs:annotation>
                    <xs:documentation>The placement of a newly opened modal or popup window.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="false" name="sizable" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The window's sizable property. A window that is sizable has borders that may be dragged to change its dimensions.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="normal" name="size" type="fsp:window_size">
                <xs:annotation>
                    <xs:documentation>The sizing mode of the window.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="style" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The active CSS styles for this component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="switch" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Specifies the value for a switch statement.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="0" name="tabindex" type="fsp:integer">
                <xs:annotation>
                    <xs:documentation>The tab index for the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="title" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The title text.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unless" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>If true, prevent component creation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute default="true" name="visible" type="fsp:boolean">
                <xs:annotation>
                    <xs:documentation>The visibility state of the component.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The component's width.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="button_position">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="right"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="caption_alignment">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="center"/>
                    <xs:enumeration value="end"/>
                    <xs:enumeration value="start"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="caption_position">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="bottom"/>
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="right"/>
                    <xs:enumeration value="top"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="checkbox_position">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="right"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="column_sortOrder">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ascending"/>
                    <xs:enumeration value="descending"/>
                    <xs:enumeration value="native"/>
                    <xs:enumeration value="unsorted"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="column_sortToggle">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="binary"/>
                    <xs:enumeration value="tristate"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="cscript_mode">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="defer"/>
                    <xs:enumeration value="immediate"/>
                    <xs:enumeration value="manual"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="link_position">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="right"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="memobox_wrap">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="hard"/>
                    <xs:enumeration value="soft"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="paneview_orientation">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="horizontal"/>
                    <xs:enumeration value="vertical"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="radiobutton_position">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="right"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="radiogroup_orientation">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="horizontal"/>
                    <xs:enumeration value="vertical"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="rows_selectable">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple"/>
                    <xs:enumeration value="no"/>
                    <xs:enumeration value="single"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="slider_orientation">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="horizontal"/>
                    <xs:enumeration value="vertical"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="snippet_position">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="after"/>
                    <xs:enumeration value="before"/>
                    <xs:enumeration value="first"/>
                    <xs:enumeration value="last"/>
                    <xs:enumeration value="parent"/>
                    <xs:enumeration value="replace"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="sscript_mode">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="defer"/>
                    <xs:enumeration value="immediate"/>
                    <xs:enumeration value="manual"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="tabview_tabPosition">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="bottom"/>
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="right"/>
                    <xs:enumeration value="top"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="toolbar_alignment">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="center"/>
                    <xs:enumeration value="end"/>
                    <xs:enumeration value="start"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="toolbar_orientation">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="horizontal"/>
                    <xs:enumeration value="vertical"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="window_closeAction">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="destroy"/>
                    <xs:enumeration value="detach"/>
                    <xs:enumeration value="hide"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="window_mode">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="inline"/>
                    <xs:enumeration value="modal"/>
                    <xs:enumeration value="popup"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="window_position">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="center"/>
                    <xs:enumeration value="center_bottom"/>
                    <xs:enumeration value="center_top"/>
                    <xs:enumeration value="left_bottom"/>
                    <xs:enumeration value="left_center"/>
                    <xs:enumeration value="left_top"/>
                    <xs:enumeration value="right_bottom"/>
                    <xs:enumeration value="right_center"/>
                    <xs:enumeration value="right_top"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="window_size">
        <xs:union memberTypes="fsp:el">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="maximized"/>
                    <xs:enumeration value="minimized"/>
                    <xs:enumeration value="normal"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
</xs:schema>
